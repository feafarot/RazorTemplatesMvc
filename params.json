{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Razor Templates MVC\r\nRazorTemplatesMvc - a tool for creating template files of any type using the features of the engine \"Razor\". This library allows to use C# code via Razor Engine in different files like `.css` or `.js` files.  In this files it is possible to access ASP.NET session, also in this file can be pass parameters via URL.\r\n\r\n### Install / Add library\r\nAt first library *RazorTemplatesMvc.dll* should be included in to ASP.NET MVC project. It can be installed by typing in the NuGet Package Manager Console the following line:\r\n> Install-Package RazorTemplatesMvc\r\n\r\n### Adding template handling route\r\nRoute is needed to be added in `Global.asax.cs`. Templates will be handled using this route. Route can be created with static method `CreateRoute` of static class `TemplateRouteFactory`.\r\nFor example, to create route that will handle templated `.css` files, following code can be used:\r\n\r\n```csharp\r\nvar templateRoute = new TemplateRouteFactory.CreateRoute(\r\n    \"css/{name}.css\", \r\n    ContentType.Css, \r\n    \"~/Content\", \r\n    FileTypeHandlingMode.WithCsExtensionPrefix);\r\nroutes.Add(\"CssRoute\", templateRoute);\r\n```\r\n\r\n### Adding of templated file\r\nAfter adding a route, templates files should be added to folder that was passed in 3-rd parameter in `CreateRoute` method. In example case it will be folder `/Content` in root of project. For example file `test.cscss` (this extension is used because route was registered with `FileTypeHandlingMode.WithCsExtensionPrefix` parameter, and because `.css` will be external file type, than `.cscss` - internal file type), in which `C#` code can be used via `Razor` engine. For example: \r\n\r\n```csharp\r\n@using RazorTemplatesMvc\r\n@using RazorTemplatesMvc.Helpers.Css\r\n@{\r\n    var mainColor = new Color(0, 153, 255, DisplayBehavior.Normal);\r\n}\r\nh1\r\n{\r\n    color: @mainColor;\r\n}\r\n```\r\n\r\n### Adding template reference\r\nExtension methods `CssTemplateRoute` or `JsTemplateRoute` can be used in markup to add reference on `.cshtml` view. To use this methods `@using RazorTemplatesMvc` should be added in view. Or link can be added manually. For exeample: \r\n\r\n```csharp\r\n@Html.CssTemplateRoute(Url, \"CssRoute\", new { name = \"test\" })\r\n```\r\n\r\nThis methods generates next markup: \r\n\r\n```html\r\n<link href=\"/css/test.css\" type=\"text/css\" rel=\"stylesheet\" />\r\n```\r\n\r\nAnd after navigation by generated link will be next content: \r\n\r\n```css\r\nh1\r\n{\r\n    color: rgba(0, 153, 255, 1);  \r\n}\r\n```\r\n\r\n###Access to ASP.NET Session\r\nSession can be accessed over `@Model.Session` in the template file. As sample:\r\n\r\n```css\r\nbody \r\n{ \r\n    background-color: @Model.Session[\"bgcolor\"];\r\n}\r\n```\r\n\r\n! Need to make sure that Session is already initialized.\r\n\r\n###Template file parameters\r\nIn template file can be passed different parameters. To pass parameters into template file, overload of method `CssTemplateRoute` that takes four arguments can be used. Sample:\r\n\r\n```csharp\r\n@Html.CssTemplateRoute(Url, \"CssRoute\", new { cssname = \"test\" }, new Parameter(\"backgroundColor\", new Color(23, 26, 26)))\r\n```\r\n\r\nParameters can be obtained via `@Model.Parameters` property in template file.\r\n\r\n```css\r\nbody \r\n{\r\n    background-color: @Model.Parameters[\"backgroundColor\"];\r\n}\r\n```\r\n\r\n[Русская версия](https://github.com/feafarot/RazorTemplatesMvc/wiki/Руководство-пользователя)","google":"","name":"Razor Templates MVC","tagline":"Custom razor files templates for ASP.NET MVC applications."}